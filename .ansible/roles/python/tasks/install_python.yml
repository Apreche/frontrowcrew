---
- name: Add deadsnakes ppa
  ansible.builtin.apt_repository:
    repo: 'ppa:deadsnakes/ppa'
  become: yes

- name: Install Python3 packages
  ansible.builtin.apt:
    pkg:
    - python3
    - python3-dev
    - python3-distutils
    - python3-testresources
    - python3-pip
    - python3-setuptools
    - python3-tk
    - python3-venv
    - python-is-python3
    - "python{{ python_version }}"
    - "python{{ python_version }}-dev"
    - "python{{ python_version }}-venv"
    - "python{{ python_version }}-tk"
    state: latest
  become: yes

- name: Install system dependencies for Python modules
  ansible.builtin.apt:
    pkg:
    - build-essential
    - libexempi8
    - libfreetype6-dev
    - libjpeg-dev
    - liblcms2-dev
    - libmemcached-dev
    - libpq-dev
    - libsasl2-2
    - libtiff-dev
    - libwebp-dev
    - openssl
    - tcl-dev
    - tk-dev
    - zlib1g-dev
    state: latest
  become: yes

- name: Ensure pip is installed and upgraded
  command: "python{{ python_version }} -m ensurepip --upgrade"
  become: yes

# Can't use ansible.builtin.pip without setuptools
- name: Ensure setuptools is installed
  command: "python{{ python_version }} -m pip install setuptools"
  become: yes

- name: Install testresources
  ansible.builtin.pip:
    executable: "pip{{ python_version }}"
    name: testresources
    state: latest
  become: yes
  vars:
    ansible_python_interpreter: "/usr/bin/python{{ python_version }}"

- name: Install uv
  ansible.builtin.pip:
    executable: "pip{{ python_version }}"
    name: uv
    state: latest
  become: yes
  vars:
    ansible_python_interpreter: "/usr/bin/python{{ python_version }}"

- name: Ensure virtual environment exists
  ansible.builtin.shell:
    cmd: uv venv
    chdir: "{{ project_source_dir }}"
  environment:
    UV_PROJECT_ENVIRONMENT: "{{ virtualenv_project_dir }}"
  vars:
    ansible_python_interpreter: "/usr/bin/python{{ python_version }}"
  become: true
  become_user: frc

- name: Install project Python requirements
  ansible.builtin.shell:
    cmd: uv sync
    chdir: "{{ project_source_dir }}"
  environment:
    UV_PROJECT_ENVIRONMENT: "{{ virtualenv_project_dir }}"
  notify: "restart web application server"
  vars:
    ansible_python_interpreter: "/usr/bin/python{{ python_version }}"
  become: true
  become_user: frc
