# Generated by Django 4.1.1 on 2022-12-29 00:42

from django.db import migrations
from django.utils.translation import gettext_lazy as _

from shows import models


def create_book_author_metadata_type(apps, schema_editor):
    MetaDataType = apps.get_model("shows", "MetaDataType")
    MetaDataType.objects.create(
        id=models.MetaDataType.BOOK_AUTHOR,
        description=_("Book Author"),
        plural_description=_("Book Authors"),
        slug=_("book_author"),
        plural_slug=_("book_authors"),
    )


def delete_book_author_metadata_type(apps, schema_editor):
    MetaDataType = apps.get_model("shows", "MetaDataType")
    MetaDataType.objects.get(
        id=models.MetaDataType.BOOK_AUTHOR,
    ).delete()


def update_related_link_types(apps, schema_editor):
    RelatedLinkType = apps.get_model("shows", "RelatedLinkType")
    updates = [
        (
            models.RelatedLinkType.THING_OF_THE_DAY,
            _("Things of the Day"),
            _("thing_of_the_day"),
            _("things_of_the_day"),
        ),
        (
            models.RelatedLinkType.FORUM_THREAD,
            _("Forum Threads"),
            _("forum_thread"),
            _("forum_threads"),
        ),
        (
            models.RelatedLinkType.PURCHASE_LINK,
            _("Purchase Links"),
            _("purchase_link"),
            _("purchase_links"),
        ),
    ]
    for id, plural_description, slug, plural_slug in updates:
        related_link_type = RelatedLinkType.objects.get(id=id)
        related_link_type.plural_description = plural_description
        related_link_type.slug = slug
        related_link_type.plural_slug = plural_slug
        related_link_type.save()


def unupdate_related_link_types(apps, schema_editor):
    RelatedLinkType = apps.get_model("shows", "RelatedLinkType")
    RelatedLinkType.objects.all().update(
        plural_description=_(""),
        slug=_(""),
        plural_slug=_(""),
    )


class Migration(migrations.Migration):

    dependencies = [
        ("shows", "0019_add_fields_to_type_models"),
    ]

    operations = [
        migrations.RunPython(
            create_book_author_metadata_type,
            delete_book_author_metadata_type,
        ),
        migrations.RunSQL(
            sql=[
                (
                    "ALTER sequence shows_metadatatype_id_seq RESTART with %s;",
                    [models.MetaDataType.BOOK_AUTHOR + 1]
                )
            ],
            reverse_sql=[
                (
                    "ALTER sequence shows_metadatatype_id_seq RESTART with %s;",
                    [models.MetaDataType.BOOK_AUTHOR]
                )
            ]
        ),
        migrations.RunPython(
            update_related_link_types,
            unupdate_related_link_types,
        )
    ]
